// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderButtons renders correctly 1`] = `
.c0 {
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 {
  display: inline-block;
  color: #AAAAAA;
  cursor: pointer;
  margin: auto 0 auto 1vw;
  will-change: transform;
  -webkit-transition: -webkit-transform 250ms ease-in-out;
  -webkit-transition: transform 250ms ease-in-out;
  transition: transform 250ms ease-in-out;
  -webkit-transform: scale(0.75);
  -ms-transform: scale(0.75);
  transform: scale(0.75);
}

.c1:hover {
  -webkit-transform: scale(0.9);
  -ms-transform: scale(0.9);
  transform: scale(0.9);
}

<Toast>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: inline-block;
  color: ",
                    [Function],
                    ";
  cursor: pointer;
  margin: auto 0 auto 1vw;

  will-change: transform;
  transition: transform 250ms ease-in-out;
  transform: scale(0.75);
  &:hover {
    transform: scale(0.9);
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="question"
                inverse={false}
                listItem={false}
                mask={null}
                onClick={[Function]}
                pull={null}
                pulse={false}
                rotation={null}
                size="2x"
                spin={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question fa-w-12 fa-2x "
                  data-icon="question"
                  data-prefix="fas"
                  focusable="false"
                  onClick={[Function]}
                  role="img"
                  style={Object {}}
                  viewBox="0 0 384 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: inline-block;
  color: ",
                    [Function],
                    ";
  cursor: pointer;
  margin: auto 0 auto 1vw;

  will-change: transform;
  transition: transform 250ms ease-in-out;
  transform: scale(0.75);
  &:hover {
    transform: scale(0.9);
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="cog"
                inverse={false}
                listItem={false}
                mask={null}
                onClick={[Function]}
                pull={null}
                pulse={false}
                rotation={null}
                size="2x"
                spin={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-cog fa-w-16 fa-2x "
                  data-icon="cog"
                  data-prefix="fas"
                  focusable="false"
                  onClick={[Function]}
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: inline-block;
  color: ",
                    [Function],
                    ";
  cursor: pointer;
  margin: auto 0 auto 1vw;

  will-change: transform;
  transition: transform 250ms ease-in-out;
  transform: scale(0.75);
  &:hover {
    transform: scale(0.9);
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="door-open"
                inverse={false}
                listItem={false}
                mask={null}
                onClick={[Function]}
                pull={null}
                pulse={false}
                rotation={null}
                size="2x"
                spin={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-door-open fa-w-20 fa-2x "
                  data-icon="door-open"
                  data-prefix="fas"
                  focusable="false"
                  onClick={[Function]}
                  role="img"
                  style={Object {}}
                  viewBox="0 0 640 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M624 448h-80V113.45C544 86.19 522.47 64 496 64H384v64h96v384h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM312.24 1.01l-192 49.74C105.99 54.44 96 67.7 96 82.92V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h336V33.18c0-21.58-19.56-37.41-39.76-32.17zM264 288c-13.25 0-24-14.33-24-32s10.75-32 24-32 24 14.33 24 32-10.75 32-24 32z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Toast>
`;
